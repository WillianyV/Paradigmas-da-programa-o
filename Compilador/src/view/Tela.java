/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import model.Lexico;
import model.Sintatico;
import model.Compilador;

/**
 *
 * @author willi
 */
public class Tela extends javax.swing.JFrame {

    private static final String SAVE_ERROR_MESSAGE = "Erro ao salvar arquivo";
    private static final String TEXT_FILES_MESSAGE = "Arquivos de Texto";
    private static final String PROJECT_EXTENSION = "txt";
    private static final String PROJECT_FILE_EXTENSION = ".txt";
    
    private final Compilador compiler = new Compilador(new Lexico(), new Sintatico());
    private Path filePath;

    public Tela() {
        initComponents();
        this.setIconImage(new javax.swing.ImageIcon(getClass().getResource("/arquivos/imagens/icons8-computer-48.png")).getImage());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        compilarButton = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        blocoDeCodigosTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        saidaCompiladorTextArea = new javax.swing.JTextArea();
        salvarButton = new javax.swing.JLabel();
        limparButton = new javax.swing.JLabel();
        infoButton = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Compilador WV");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(748, 527));

        compilarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/arquivos/imagens/icons8-play-32.png"))); // NOI18N
        compilarButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        compilarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                compilarButtonMouseClicked(evt);
            }
        });

        blocoDeCodigosTextArea.setColumns(20);
        blocoDeCodigosTextArea.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        blocoDeCodigosTextArea.setRows(5);
        blocoDeCodigosTextArea.setSelectionColor(new java.awt.Color(50, 190, 166));
        jScrollPane1.setViewportView(blocoDeCodigosTextArea);

        saidaCompiladorTextArea.setEditable(false);
        saidaCompiladorTextArea.setColumns(20);
        saidaCompiladorTextArea.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        saidaCompiladorTextArea.setRows(5);
        saidaCompiladorTextArea.setSelectionColor(new java.awt.Color(50, 190, 166));
        jScrollPane2.setViewportView(saidaCompiladorTextArea);

        salvarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/arquivos/imagens/icons8-save-32.png"))); // NOI18N
        salvarButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        salvarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                salvarButtonMouseClicked(evt);
            }
        });

        limparButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/arquivos/imagens/icons8-apagar-32.png"))); // NOI18N
        limparButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        limparButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                limparButtonMouseClicked(evt);
            }
        });

        infoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/arquivos/imagens/icons8-informações-32.png"))); // NOI18N
        infoButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                infoButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(compilarButton)
                        .addGap(18, 18, 18)
                        .addComponent(limparButton)
                        .addGap(18, 18, 18)
                        .addComponent(salvarButton)
                        .addGap(18, 18, 18)
                        .addComponent(infoButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(compilarButton)
                        .addComponent(salvarButton, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(limparButton)
                    .addComponent(infoButton))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        compilarButton.setToolTipText("Compilar algoritmo");
        salvarButton.setToolTipText("Salvar Algoritmo");
        limparButton.setToolTipText("Apagar Algoritmo");
        infoButton.setToolTipText("Informações");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(753, 581));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void compilarButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_compilarButtonMouseClicked
        compile();
    }//GEN-LAST:event_compilarButtonMouseClicked

    private void salvarButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salvarButtonMouseClicked
        salvarProjeto();
    }//GEN-LAST:event_salvarButtonMouseClicked

    private void limparButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_limparButtonMouseClicked
        clean();
    }//GEN-LAST:event_limparButtonMouseClicked

    private void infoButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_infoButtonMouseClicked
        JOptionPane.showMessageDialog(rootPane, "Compilador desenvolvido por Williany Veras para a cadeira \n de Paradigmas de Programação da UAST/UFRPE ", "Informação", JOptionPane.INFORMATION_MESSAGE, null);
    }//GEN-LAST:event_infoButtonMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea blocoDeCodigosTextArea;
    private javax.swing.JLabel compilarButton;
    private javax.swing.JLabel infoButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel limparButton;
    private javax.swing.JTextArea saidaCompiladorTextArea;
    private javax.swing.JLabel salvarButton;
    // End of variables declaration//GEN-END:variables

    public void compile() {
        log(compiler.compile(blocoDeCodigosTextArea.getText(), ""));
    }
        
    public void salvarProjeto() {
        final String text = blocoDeCodigosTextArea.getText();

        if (isFileOpen()) {
            try (BufferedWriter writer = new BufferedWriter(new FileWriter(this.filePath.toFile()))) {
                writer.write(text);
            } catch (final IOException e) {
                e.printStackTrace();
            }

        } else {
            final JFileChooser fileChooser = new JFileChooser();
            final FileNameExtensionFilter textFileFilter = new FileNameExtensionFilter(TEXT_FILES_MESSAGE, PROJECT_EXTENSION);
            fileChooser.setFileFilter(textFileFilter);

            if (fileChooser.showSaveDialog(new JFrame()) == JFileChooser.APPROVE_OPTION) {
                try {
                    final File selectedFile = fileChooser.getSelectedFile();

                    if (isProjectFileExtension(selectedFile)) {
                        this.filePath = selectedFile.toPath();
                    } else {
                        this.filePath = Paths.get(selectedFile.getPath().toString() + PROJECT_FILE_EXTENSION);
                    }

                    try (BufferedWriter writer = new BufferedWriter(new FileWriter(this.filePath.toFile()))) {
                        writer.write(text);
                    }
                } catch (final IOException e) {
                    log(SAVE_ERROR_MESSAGE);
                    e.printStackTrace();
                }
            }
        }

    }
    
    private boolean isProjectFileExtension(final File selectedFile) {
        return selectedFile.getName().endsWith(PROJECT_EXTENSION);
    }
    
    private boolean isFileOpen() {
        return this.filePath != null;
    }
    
    private void log(final String text) {
        saidaCompiladorTextArea.setText(text);
    }

    private void clean() {
        blocoDeCodigosTextArea.setText("");
        saidaCompiladorTextArea.setText("");
    }

    
}